{"results": [{"node": {"raw_sql": "{{\n    config(\n        materialized='incremental',\n        unique_key='postcode_id',\n        tag = ['daily']\n    )\n}}\n\nselect\n  {{ dbt_utils.surrogate_key('users_extract.id', 'users_extract.postcode')}} as postcode_id,\n  users_extract.id as user_id,\n  users_extract.postcode,\n  CURRENT_TIMESTAMP() as postcode_updated_date\nfrom\n  dbt_francisco.users_extract\n\n  {% if is_incremental() %}\n\n    where\n      NOT EXISTS (\n          SELECT * FROM {{ this }} this WHERE this.postcode_id = {{ dbt_utils.surrogate_key('users_extract.id', 'users_extract.postcode')}}\n        )\n\n{% endif %}", "compiled": true, "database": "dbt-test-290911", "schema": "dbt_francisco", "fqn": ["checkout_test_franciscocasanueva", "postcode_log"], "unique_id": "model.checkout_test_franciscocasanueva.postcode_log", "package_name": "checkout_test_franciscocasanueva", "root_path": "/home/francis/Documents/Repos/checkout_test_franciscocasanueva", "path": "postcode_log.sql", "original_file_path": "models/postcode_log.sql", "name": "postcode_log", "resource_type": "model", "alias": "postcode_log", "checksum": {"name": "sha256", "checksum": "009d04a9aedd56a9da786250307d3eaf17dee649f5f87f11eef9c8a94be34b4d"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "unique_key": "postcode_id", "tag": ["daily"]}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.surrogate_key", "macro.dbt.is_incremental"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/checkout_test_franciscocasanueva/models/postcode_log.sql", "deferred": false, "compiled_sql": "\n\nselect\n  to_hex(md5(cast(concat(coalesce(cast(users_extract.id as \n    string\n), ''), '-', coalesce(cast(users_extract.postcode as \n    string\n), '')) as \n    string\n))) as postcode_id,\n  users_extract.id as user_id,\n  users_extract.postcode,\n  CURRENT_TIMESTAMP() as postcode_updated_date\nfrom\n  dbt_francisco.users_extract\n\n  \n\n    where\n      NOT EXISTS (\n          SELECT * FROM `dbt-test-290911`.`dbt_francisco`.`postcode_log` this WHERE this.postcode_id = to_hex(md5(cast(concat(coalesce(cast(users_extract.id as \n    string\n), ''), '-', coalesce(cast(users_extract.postcode as \n    string\n), '')) as \n    string\n)))\n        )\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nselect\n  to_hex(md5(cast(concat(coalesce(cast(users_extract.id as \n    string\n), ''), '-', coalesce(cast(users_extract.postcode as \n    string\n), '')) as \n    string\n))) as postcode_id,\n  users_extract.id as user_id,\n  users_extract.postcode,\n  CURRENT_TIMESTAMP() as postcode_updated_date\nfrom\n  dbt_francisco.users_extract\n\n  \n\n    where\n      NOT EXISTS (\n          SELECT * FROM `dbt-test-290911`.`dbt_francisco`.`postcode_log` this WHERE this.postcode_id = to_hex(md5(cast(concat(coalesce(cast(users_extract.id as \n    string\n), ''), '-', coalesce(cast(users_extract.postcode as \n    string\n), '')) as \n    string\n)))\n        )\n\n"}, "error": null, "status": null, "execution_time": 0.03227972984313965, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-10-04T23:37:54.603468Z", "completed_at": "2020-10-04T23:37:54.634470Z"}, {"name": "execute", "started_at": "2020-10-04T23:37:54.634811Z", "completed_at": "2020-10-04T23:37:54.634824Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{\n    config(\n      materialized='incremental',\n      unique_key='update_postcode_id',\n      tag = ['daily']\n    )\n}}\n\nwith current_postcode as (\n  select\n    poscode_log1.user_id,\n    poscode_log1.postcode,\n    poscode_log1.postcode_updated_date\n  from\n    {{ref ('postcode_log')}} poscode_log1\n  where\n    poscode_log1.postcode_updated_date = (SELECT MAX(poscode_log2.postcode_updated_date) FROM {{ref ('postcode_log')}} poscode_log2 WHERE poscode_log1.user_id = poscode_log2.user_id)\n)\n\nselect\n  {{ dbt_utils.surrogate_key('postcode_log.user_id', 'pageviews.pageview_datetime')}} as update_postcode_id,\n  postcode_log.user_id,\n  pageviews.pageview_datetime,\n  postcode_log.postcode as original_postcode,\n  current_postcode.postcode as current_postcode,\n  current_postcode.postcode_updated_date\nfrom\n  {{ref ('postcode_log')}} as postcode_log\n  join dbt_francisco.pageviews_extract as pageviews on postcode_log.user_id = pageviews.user_id\n  join current_postcode on current_postcode.user_id = postcode_log.user_id\n\nwhere\n  postcode_log.postcode_updated_date = (\n      select\n        max(postcode_log3.postcode_updated_date)\n      from {{ref ('postcode_log')}} as postcode_log3\n      where\n        postcode_log3.user_id = postcode_log.user_id\n        and postcode_log3.postcode_updated_date < pageviews.pageview_datetime)\n\n{% if is_incremental() %}\n\n      and current_postcode.postcode_updated_date > (select max(this.postcode_updated_date) from {{this}} as this)\n\n{% endif %}", "compiled": true, "database": "dbt-test-290911", "schema": "dbt_francisco", "fqn": ["checkout_test_franciscocasanueva", "updated_postcode_stg"], "unique_id": "model.checkout_test_franciscocasanueva.updated_postcode_stg", "package_name": "checkout_test_franciscocasanueva", "root_path": "/home/francis/Documents/Repos/checkout_test_franciscocasanueva", "path": "updated_postcode_stg.sql", "original_file_path": "models/updated_postcode_stg.sql", "name": "updated_postcode_stg", "resource_type": "model", "alias": "updated_postcode_stg", "checksum": {"name": "sha256", "checksum": "2d70a3460e607f3128a0e90288fbe4e20cb991d6a52ec4a07f394c323a87aa18"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "unique_key": "update_postcode_id", "tag": ["daily"]}, "tags": [], "refs": [["postcode_log"], ["postcode_log"], ["postcode_log"], ["postcode_log"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.surrogate_key", "macro.dbt.is_incremental"], "nodes": ["model.checkout_test_franciscocasanueva.postcode_log", "model.checkout_test_franciscocasanueva.postcode_log", "model.checkout_test_franciscocasanueva.postcode_log", "model.checkout_test_franciscocasanueva.postcode_log"]}, "description": "view with the postcodes that have changed since last time. Used to update old postcodes on pageview_postcode", "columns": {"user_id": {"name": "user_id", "description": "Primary key of users", "meta": {}, "data_type": null, "tags": []}, "pageview_datetime": {"name": "pageview_datetime", "description": "timestamp of this pageview", "meta": {}, "data_type": null, "tags": []}, "original_postcode": {"name": "original_postcode", "description": "postcode value when this pageview was made", "meta": {}, "data_type": null, "tags": []}, "current_postcode": {"name": "current_postcode", "description": "current postcode of this user", "meta": {}, "data_type": null, "tags": []}, "postcode_updated_date": {"name": "postcode_updated_date", "description": "update time of this current postcode", "meta": {}, "data_type": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/schema.yml", "build_path": "target/compiled/checkout_test_franciscocasanueva/models/updated_postcode_stg.sql", "deferred": false, "compiled_sql": "\n\nwith current_postcode as (\n  select\n    poscode_log1.user_id,\n    poscode_log1.postcode,\n    poscode_log1.postcode_updated_date\n  from\n    `dbt-test-290911`.`dbt_francisco`.`postcode_log` poscode_log1\n  where\n    poscode_log1.postcode_updated_date = (SELECT MAX(poscode_log2.postcode_updated_date) FROM `dbt-test-290911`.`dbt_francisco`.`postcode_log` poscode_log2 WHERE poscode_log1.user_id = poscode_log2.user_id)\n)\n\nselect\n  to_hex(md5(cast(concat(coalesce(cast(postcode_log.user_id as \n    string\n), ''), '-', coalesce(cast(pageviews.pageview_datetime as \n    string\n), '')) as \n    string\n))) as update_postcode_id,\n  postcode_log.user_id,\n  pageviews.pageview_datetime,\n  postcode_log.postcode as original_postcode,\n  current_postcode.postcode as current_postcode,\n  current_postcode.postcode_updated_date\nfrom\n  `dbt-test-290911`.`dbt_francisco`.`postcode_log` as postcode_log\n  join dbt_francisco.pageviews_extract as pageviews on postcode_log.user_id = pageviews.user_id\n  join current_postcode on current_postcode.user_id = postcode_log.user_id\n\nwhere\n  postcode_log.postcode_updated_date = (\n      select\n        max(postcode_log3.postcode_updated_date)\n      from `dbt-test-290911`.`dbt_francisco`.`postcode_log` as postcode_log3\n      where\n        postcode_log3.user_id = postcode_log.user_id\n        and postcode_log3.postcode_updated_date < pageviews.pageview_datetime)\n\n\n\n      and current_postcode.postcode_updated_date > (select max(this.postcode_updated_date) from `dbt-test-290911`.`dbt_francisco`.`updated_postcode_stg` as this)\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nwith current_postcode as (\n  select\n    poscode_log1.user_id,\n    poscode_log1.postcode,\n    poscode_log1.postcode_updated_date\n  from\n    `dbt-test-290911`.`dbt_francisco`.`postcode_log` poscode_log1\n  where\n    poscode_log1.postcode_updated_date = (SELECT MAX(poscode_log2.postcode_updated_date) FROM `dbt-test-290911`.`dbt_francisco`.`postcode_log` poscode_log2 WHERE poscode_log1.user_id = poscode_log2.user_id)\n)\n\nselect\n  to_hex(md5(cast(concat(coalesce(cast(postcode_log.user_id as \n    string\n), ''), '-', coalesce(cast(pageviews.pageview_datetime as \n    string\n), '')) as \n    string\n))) as update_postcode_id,\n  postcode_log.user_id,\n  pageviews.pageview_datetime,\n  postcode_log.postcode as original_postcode,\n  current_postcode.postcode as current_postcode,\n  current_postcode.postcode_updated_date\nfrom\n  `dbt-test-290911`.`dbt_francisco`.`postcode_log` as postcode_log\n  join dbt_francisco.pageviews_extract as pageviews on postcode_log.user_id = pageviews.user_id\n  join current_postcode on current_postcode.user_id = postcode_log.user_id\n\nwhere\n  postcode_log.postcode_updated_date = (\n      select\n        max(postcode_log3.postcode_updated_date)\n      from `dbt-test-290911`.`dbt_francisco`.`postcode_log` as postcode_log3\n      where\n        postcode_log3.user_id = postcode_log.user_id\n        and postcode_log3.postcode_updated_date < pageviews.pageview_datetime)\n\n\n\n      and current_postcode.postcode_updated_date > (select max(this.postcode_updated_date) from `dbt-test-290911`.`dbt_francisco`.`updated_postcode_stg` as this)\n\n"}, "error": null, "status": null, "execution_time": 0.02549576759338379, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-10-04T23:37:54.636358Z", "completed_at": "2020-10-04T23:37:54.659619Z"}, {"name": "execute", "started_at": "2020-10-04T23:37:54.660908Z", "completed_at": "2020-10-04T23:37:54.660929Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{\n    config(\n        materialized='incremental',\n        unique_key='uniquekey',\n        tag = ['hourly']\n\n    )\n}}\n\n--depends_on: {{ ref('updated_postcode_stg') }}\n\n--Add the new entries to the table\nselect\n  {{ dbt_utils.surrogate_key('pageviews.user_id', 'pageviews.pageview_datetime') }} as uniquekey,\n  pageviews.user_id,\n  pageviews.pageview_datetime,\n  USR.postcode as original_postcode,\n  USR.postcode as current_postcode,\n  USR.postcode_updated_date\n\nfrom dbt_francisco.pageviews_extract as pageviews\njoin {{ref('postcode_log')}} as USR on USR.user_id = pageviews.user_id\n\n{% if is_incremental() %}\n  -- this filter will only be applied on an incremental run\n  where\n    pageviews.pageview_datetime > (select max(this.pageview_datetime) from {{ this }} as this)\n\n\n  --Update those postcodes that have changed\n  UNION ALL\n\n  select\n    {{ dbt_utils.surrogate_key('updated.user_id', 'updated.pageview_datetime') }} as uniquekey,\n    updated.user_id,\n    updated.pageview_datetime,\n    updated.original_postcode,\n    updated.current_postcode,\n    updated.postcode_updated_date\n\n  from  {{ref('updated_postcode_stg')}} as updated\n\n    where\n      updated.postcode_updated_date > (select max(this.postcode_updated_date) from {{ this }} as this)\n{% endif %}", "compiled": true, "database": "dbt-test-290911", "schema": "dbt_francisco", "fqn": ["checkout_test_franciscocasanueva", "pageviews_postcode"], "unique_id": "model.checkout_test_franciscocasanueva.pageviews_postcode", "package_name": "checkout_test_franciscocasanueva", "root_path": "/home/francis/Documents/Repos/checkout_test_franciscocasanueva", "path": "pageviews_postcode.sql", "original_file_path": "models/pageviews_postcode.sql", "name": "pageviews_postcode", "resource_type": "model", "alias": "pageviews_postcode", "checksum": {"name": "sha256", "checksum": "fe64d650447ca1e656e3d04df4f18b69649352071342c23c2f137c0a51e2c5ae"}, "config": {"enabled": true, "materialized": "incremental", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "unique_key": "uniquekey", "tag": ["hourly"]}, "tags": [], "refs": [["updated_postcode_stg"], ["postcode_log"]], "sources": [], "depends_on": {"macros": ["macro.dbt_utils.surrogate_key", "macro.dbt.is_incremental"], "nodes": ["model.checkout_test_franciscocasanueva.updated_postcode_stg", "model.checkout_test_franciscocasanueva.postcode_log"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/checkout_test_franciscocasanueva/models/pageviews_postcode.sql", "deferred": false, "compiled_sql": "\n\n--depends_on: `dbt-test-290911`.`dbt_francisco`.`updated_postcode_stg`\n\n--Add the new entries to the table\nselect\n  to_hex(md5(cast(concat(coalesce(cast(pageviews.user_id as \n    string\n), ''), '-', coalesce(cast(pageviews.pageview_datetime as \n    string\n), '')) as \n    string\n))) as uniquekey,\n  pageviews.user_id,\n  pageviews.pageview_datetime,\n  USR.postcode as original_postcode,\n  USR.postcode as current_postcode,\n  USR.postcode_updated_date\n\nfrom dbt_francisco.pageviews_extract as pageviews\njoin `dbt-test-290911`.`dbt_francisco`.`postcode_log` as USR on USR.user_id = pageviews.user_id\n\n\n  -- this filter will only be applied on an incremental run\n  where\n    pageviews.pageview_datetime > (select max(this.pageview_datetime) from `dbt-test-290911`.`dbt_francisco`.`pageviews_postcode` as this)\n\n\n  --Update those postcodes that have changed\n  UNION ALL\n\n  select\n    to_hex(md5(cast(concat(coalesce(cast(updated.user_id as \n    string\n), ''), '-', coalesce(cast(updated.pageview_datetime as \n    string\n), '')) as \n    string\n))) as uniquekey,\n    updated.user_id,\n    updated.pageview_datetime,\n    updated.original_postcode,\n    updated.current_postcode,\n    updated.postcode_updated_date\n\n  from  `dbt-test-290911`.`dbt_francisco`.`updated_postcode_stg` as updated\n\n    where\n      updated.postcode_updated_date > (select max(this.postcode_updated_date) from `dbt-test-290911`.`dbt_francisco`.`pageviews_postcode` as this)\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\n--depends_on: `dbt-test-290911`.`dbt_francisco`.`updated_postcode_stg`\n\n--Add the new entries to the table\nselect\n  to_hex(md5(cast(concat(coalesce(cast(pageviews.user_id as \n    string\n), ''), '-', coalesce(cast(pageviews.pageview_datetime as \n    string\n), '')) as \n    string\n))) as uniquekey,\n  pageviews.user_id,\n  pageviews.pageview_datetime,\n  USR.postcode as original_postcode,\n  USR.postcode as current_postcode,\n  USR.postcode_updated_date\n\nfrom dbt_francisco.pageviews_extract as pageviews\njoin `dbt-test-290911`.`dbt_francisco`.`postcode_log` as USR on USR.user_id = pageviews.user_id\n\n\n  -- this filter will only be applied on an incremental run\n  where\n    pageviews.pageview_datetime > (select max(this.pageview_datetime) from `dbt-test-290911`.`dbt_francisco`.`pageviews_postcode` as this)\n\n\n  --Update those postcodes that have changed\n  UNION ALL\n\n  select\n    to_hex(md5(cast(concat(coalesce(cast(updated.user_id as \n    string\n), ''), '-', coalesce(cast(updated.pageview_datetime as \n    string\n), '')) as \n    string\n))) as uniquekey,\n    updated.user_id,\n    updated.pageview_datetime,\n    updated.original_postcode,\n    updated.current_postcode,\n    updated.postcode_updated_date\n\n  from  `dbt-test-290911`.`dbt_francisco`.`updated_postcode_stg` as updated\n\n    where\n      updated.postcode_updated_date > (select max(this.postcode_updated_date) from `dbt-test-290911`.`dbt_francisco`.`pageviews_postcode` as this)\n"}, "error": null, "status": null, "execution_time": 0.01903057098388672, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-10-04T23:37:54.662601Z", "completed_at": "2020-10-04T23:37:54.680505Z"}, {"name": "execute", "started_at": "2020-10-04T23:37:54.680867Z", "completed_at": "2020-10-04T23:37:54.680875Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "current_postcode", "model": "{{ ref('updated_postcode_stg') }}"}}, "compiled": true, "database": "dbt-test-290911", "schema": "dbt_francisco", "fqn": ["checkout_test_franciscocasanueva", "schema_test", "not_null_updated_postcode_stg_current_postcode"], "unique_id": "test.checkout_test_franciscocasanueva.not_null_updated_postcode_stg_current_postcode", "package_name": "checkout_test_franciscocasanueva", "root_path": "/home/francis/Documents/Repos/checkout_test_franciscocasanueva", "path": "schema_test/not_null_updated_postcode_stg_current_postcode.sql", "original_file_path": "models/schema.yml", "name": "not_null_updated_postcode_stg_current_postcode", "resource_type": "test", "alias": "not_null_updated_postcode_stg_current_postcode", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["updated_postcode_stg"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.checkout_test_franciscocasanueva.updated_postcode_stg"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/checkout_test_franciscocasanueva/models/schema.yml/schema_test/not_null_updated_postcode_stg_current_postcode.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom `dbt-test-290911`.`dbt_francisco`.`updated_postcode_stg`\nwhere current_postcode is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom `dbt-test-290911`.`dbt_francisco`.`updated_postcode_stg`\nwhere current_postcode is null\n\n\n", "column_name": "current_postcode"}, "error": null, "status": null, "execution_time": 0.020821571350097656, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-10-04T23:37:54.682199Z", "completed_at": "2020-10-04T23:37:54.701769Z"}, {"name": "execute", "started_at": "2020-10-04T23:37:54.702089Z", "completed_at": "2020-10-04T23:37:54.702097Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "original_postcode", "model": "{{ ref('updated_postcode_stg') }}"}}, "compiled": true, "database": "dbt-test-290911", "schema": "dbt_francisco", "fqn": ["checkout_test_franciscocasanueva", "schema_test", "not_null_updated_postcode_stg_original_postcode"], "unique_id": "test.checkout_test_franciscocasanueva.not_null_updated_postcode_stg_original_postcode", "package_name": "checkout_test_franciscocasanueva", "root_path": "/home/francis/Documents/Repos/checkout_test_franciscocasanueva", "path": "schema_test/not_null_updated_postcode_stg_original_postcode.sql", "original_file_path": "models/schema.yml", "name": "not_null_updated_postcode_stg_original_postcode", "resource_type": "test", "alias": "not_null_updated_postcode_stg_original_postcode", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["updated_postcode_stg"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.checkout_test_franciscocasanueva.updated_postcode_stg"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/checkout_test_franciscocasanueva/models/schema.yml/schema_test/not_null_updated_postcode_stg_original_postcode.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom `dbt-test-290911`.`dbt_francisco`.`updated_postcode_stg`\nwhere original_postcode is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom `dbt-test-290911`.`dbt_francisco`.`updated_postcode_stg`\nwhere original_postcode is null\n\n\n", "column_name": "original_postcode"}, "error": null, "status": null, "execution_time": 0.013438940048217773, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-10-04T23:37:54.703450Z", "completed_at": "2020-10-04T23:37:54.715736Z"}, {"name": "execute", "started_at": "2020-10-04T23:37:54.716106Z", "completed_at": "2020-10-04T23:37:54.716115Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "pageview_datetime", "model": "{{ ref('updated_postcode_stg') }}"}}, "compiled": true, "database": "dbt-test-290911", "schema": "dbt_francisco", "fqn": ["checkout_test_franciscocasanueva", "schema_test", "not_null_updated_postcode_stg_pageview_datetime"], "unique_id": "test.checkout_test_franciscocasanueva.not_null_updated_postcode_stg_pageview_datetime", "package_name": "checkout_test_franciscocasanueva", "root_path": "/home/francis/Documents/Repos/checkout_test_franciscocasanueva", "path": "schema_test/not_null_updated_postcode_stg_pageview_datetime.sql", "original_file_path": "models/schema.yml", "name": "not_null_updated_postcode_stg_pageview_datetime", "resource_type": "test", "alias": "not_null_updated_postcode_stg_pageview_datetime", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["updated_postcode_stg"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.checkout_test_franciscocasanueva.updated_postcode_stg"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/checkout_test_franciscocasanueva/models/schema.yml/schema_test/not_null_updated_postcode_stg_pageview_datetime.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom `dbt-test-290911`.`dbt_francisco`.`updated_postcode_stg`\nwhere pageview_datetime is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom `dbt-test-290911`.`dbt_francisco`.`updated_postcode_stg`\nwhere pageview_datetime is null\n\n\n", "column_name": "pageview_datetime"}, "error": null, "status": null, "execution_time": 0.01246023178100586, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-10-04T23:37:54.717373Z", "completed_at": "2020-10-04T23:37:54.728639Z"}, {"name": "execute", "started_at": "2020-10-04T23:37:54.728947Z", "completed_at": "2020-10-04T23:37:54.728955Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "postcode_updated_date", "model": "{{ ref('updated_postcode_stg') }}"}}, "compiled": true, "database": "dbt-test-290911", "schema": "dbt_francisco", "fqn": ["checkout_test_franciscocasanueva", "schema_test", "not_null_updated_postcode_stg_postcode_updated_date"], "unique_id": "test.checkout_test_franciscocasanueva.not_null_updated_postcode_stg_postcode_updated_date", "package_name": "checkout_test_franciscocasanueva", "root_path": "/home/francis/Documents/Repos/checkout_test_franciscocasanueva", "path": "schema_test/not_null_updated_postcode_stg_postcode_updated_date.sql", "original_file_path": "models/schema.yml", "name": "not_null_updated_postcode_stg_postcode_updated_date", "resource_type": "test", "alias": "not_null_updated_postcode_stg_postcode_updated_date", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["updated_postcode_stg"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.checkout_test_franciscocasanueva.updated_postcode_stg"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/checkout_test_franciscocasanueva/models/schema.yml/schema_test/not_null_updated_postcode_stg_postcode_updated_date.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom `dbt-test-290911`.`dbt_francisco`.`updated_postcode_stg`\nwhere postcode_updated_date is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom `dbt-test-290911`.`dbt_francisco`.`updated_postcode_stg`\nwhere postcode_updated_date is null\n\n\n", "column_name": "postcode_updated_date"}, "error": null, "status": null, "execution_time": 0.012616157531738281, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-10-04T23:37:54.730148Z", "completed_at": "2020-10-04T23:37:54.741668Z"}, {"name": "execute", "started_at": "2020-10-04T23:37:54.741978Z", "completed_at": "2020-10-04T23:37:54.741986Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "user_id", "model": "{{ ref('updated_postcode_stg') }}"}}, "compiled": true, "database": "dbt-test-290911", "schema": "dbt_francisco", "fqn": ["checkout_test_franciscocasanueva", "schema_test", "not_null_updated_postcode_stg_user_id"], "unique_id": "test.checkout_test_franciscocasanueva.not_null_updated_postcode_stg_user_id", "package_name": "checkout_test_franciscocasanueva", "root_path": "/home/francis/Documents/Repos/checkout_test_franciscocasanueva", "path": "schema_test/not_null_updated_postcode_stg_user_id.sql", "original_file_path": "models/schema.yml", "name": "not_null_updated_postcode_stg_user_id", "resource_type": "test", "alias": "not_null_updated_postcode_stg_user_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR"}, "tags": ["schema"], "refs": [["updated_postcode_stg"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.checkout_test_franciscocasanueva.updated_postcode_stg"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/checkout_test_franciscocasanueva/models/schema.yml/schema_test/not_null_updated_postcode_stg_user_id.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom `dbt-test-290911`.`dbt_francisco`.`updated_postcode_stg`\nwhere user_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom `dbt-test-290911`.`dbt_francisco`.`updated_postcode_stg`\nwhere user_id is null\n\n\n", "column_name": "user_id"}, "error": null, "status": null, "execution_time": 0.013459444046020508, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-10-04T23:37:54.743154Z", "completed_at": "2020-10-04T23:37:54.755477Z"}, {"name": "execute", "started_at": "2020-10-04T23:37:54.755788Z", "completed_at": "2020-10-04T23:37:54.755796Z"}], "fail": null, "warn": null, "skip": false}], "generated_at": "2020-10-04T23:37:54.803707Z", "elapsed_time": 0.5886001586914062}